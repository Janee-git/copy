---
- name: Ensure queue manager does not already exist
  shell: dspmq | grep -q {{ queue_manager }}
  register: qm_exists
  ignore_errors: yes

- block:
    - name: Environment setup before creating QMGR
      shell: |
        source /opt/mqm/bin/setmqenv || export MQSNOAUT=YES && set | grep -i mq
      become: yes
      become_user: mqm
      when: qm_exists.rc != 0

    - name: Create a queue manager
      command: crtmqm -u SYSTEM.DEAD.LETTER.QUEUE -p {{ admin_port }} {{ queue_manager }}
      become: yes
      become_user: mqm
      when: qm_exists.rc != 0

    - name: Start queue manager
      command: strmqm {{ queue_manager }}
      become: yes
      become_user: mqm
      when: qm_exists.rc != 0

  when: qm_exists.rc != 0

- block:
    - name: Copy Admin channel MQSC file to remote host
      copy:
        src: "{{ mqsc_channel_C1 }}"
        dest: "/tmp/{{ mqsc_channel_C1 }}"
      become: yes
      become_user: mqm

    - name: Copy local queue MQSC file to remote host
      copy:
        src: "{{ mqsc_lqueues }}"
        dest: "/tmp/{{ mqsc_lqueues }}"
      become: yes
      become_user: mqm

    - name: Ensure MQSC file exists
      stat:
        path: "/tmp/{{ mqsc_lqueues }}"
      register: mqsc_file

    - name: Check if Queue Manager is running
      shell: dspmq | grep {{ queue_manager }} | grep -q "RUNNING"
      register: qm_running
      failed_when: qm_running.rc > 1
      ignore_errors: yes

    - name: Load ADMIN channel setup MQSC data into Queue manager
      shell: "cat /tmp/{{ mqsc_channel_C1 }} | runmqsc {{ queue_manager }}"
      become: yes
      become_user: mqm
      when: qm_running.rc == 0

    - name: Load Local queue MQSC data into Queue manager
      shell: "cat /tmp/{{ mqsc_lqueues }} | runmqsc {{ queue_manager }}"
      become: yes
      become_user: mqm
      when: "qm_running.rc == 0 and mqsc_file.stat.exists"

  when: qm_exists.rc != 0
